# Select which component to install
component:
  master: true
  datanode: true
  metanode: true
  objectnode: true
  client: true
  csi: true
  monitor: true
  ingress: true

# Allow to override kubernetes version
kubernetes:
  version: ""

image:
  server: chubaofs/cfs-server:3.2.0
  client: chubaofs/cfs-client:3.2.0

  # CSI related images
  csi_driver: ghcr.io/cubefs/cfs-csi-driver:3.2.0.150.0
  csi_provisioner: registry.k8s.io/sig-storage/csi-provisioner:v2.2.2
  csi_attacher: registry.k8s.io/sig-storage/csi-attacher:v3.4.0
  csi_resizer: registry.k8s.io/sig-storage/csi-resizer:v1.3.0
  driver_registrar: registry.k8s.io/sig-storage/csi-node-driver-registrar:v2.5.0

  grafana: grafana/grafana:6.4.4
  prometheus: prom/prometheus:v2.13.1
  consul: consul:1.6.1
  pull_policy: "IfNotPresent"

log:
  # Do not redirect the standard output into a file, recommend to
  # set to true, but cfs-server version > 3.2.0 was required
  do_not_redirect_std: false

# store data,log and other data, these directory will be
#  mounted from host to container using hostPath
path:
  data: /var/lib/cubefs
  log: /var/log/cubefs
  monitor: /var/lib/cubefs_prometheus

master:
  # The replicas of master component, at least 3, recommend to be an odd number
  replicas: 3
  # Cluster name
  cluster: my-cluster
  # NodeSelector
  nodeSelector:
    "component.cubefs.io/master": "enabled"
  tolerations: [ ]
  host: master.cubefs.com
  log_level: error
  retain_logs: 2000
  # Master service http port
  port: 17010
  # Master golang pprof port
  prof: 17020
  exporter_port: 9500
  # Reserved memory in bytes for each metanode, if available memory less than this value, the metanode will be unwritable
  metanode_reserved_mem: "67108864"
  resources:
    enabled: false
    requests:
      memory: "8Gi"
      cpu: "2000m"
    limits:
      memory: "32Gi"
      cpu: "8000m"

metanode:
  # NodeSelector for metanode daemonset
  nodeSelector:
    "component.cubefs.io/metanode": "enabled"
  tolerations: [ ]
  log_level: error
  # Total memory metanode can use, recommended to be configured
  # as 80% of physical machine memory
  total_mem: "26843545600"
  port: 17210
  prof: 17220
  raft_heartbeat: 17230
  raft_replica: 17240
  exporter_port: 9510
  resources:
    enabled: true
    requests:
      memory: "32Gi"
      cpu: "2000m"
    limits:
      memory: "256Gi"
      cpu: "8000m"
  # Similar to datanode.config_override, all the config
  # listed here will be merge into metanode config file.
  config_override: |
    {
    }

datanode:
  # NodeSelector for datanode daemonset
  nodeSelector:
    "component.cubefs.io/datanode": "enabled"
  tolerations: [ ]
  log_level: error
  port: 17310
  prof: 17320
  raft_heartbeat: 17330
  raft_replica: 17340
  exporter_port: 9520
  # Disks will be used by datanode to storage data
  # Format: disk_mount_point:reserved_space
  # disk_mount_point: the mount point of disk in machine
  # reserved_space: similar to metanode reserved space, if disk available
  # space less than this number, then the disk will be unwritable
  disks:
    - /data0:21474836480
    - /data1:21474836480
  resources:
    enabled: false
    requests:
      memory: "8Gi"
      cpu: "2000m"
    limits:
      memory: "32Gi"
      cpu: "8000m"
  # Format: "${Node_IP}":${JSON_CONFIG}
  # There's a demo server config 1.1.1.1 left for example,
  # All the config written here will be merged to the final
  # '/cfs/conf/datanode.json' file.
  # Example:  {
  #  "1.1.1.1": {
  #   "logDir": "/data/cfs/log",
  #   "disks": [
  #    "/disk/nvme0n1:59000000000",
  #    "/disk/nvme1n1:59000000000",
  #    "/disk/nvme2n1:59000000000"
  #   ]
  #  }
  # }
  config_override: |
    {
    }

objectnode:
  # The replicas of object component, object node is stateless,
  # it can be any number depending on your traffic magnitude.
  replicas: 3
  log_level: error
  port: 1601
  prof: 7011
  exporter_port: 9500
  nodeSelector:
    "component.cubefs.io/objectnode": "enabled"
  tolerations: [ ]
  region: "spark"
  # Domains listed here will be used in resolution of pan-domain names to parse bucket name
  domains: "objectcfs.cubefs.io,objectnode.cubefs.io"
  host: objectnode.cubefs.com
  resources:
    enabled: false
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1024Mi"
      cpu: "1000m"

client:
  replicas: 1
  vol_name: "test"
  owner: "cubefs"
  log_level: error
  exporter_port: 9530
  prof: 17410
  resources:
    enabled: false
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1024Mi"
      cpu: "1000m"

csi:
  driverName: csi.cubefs.com
  logLevel: error
  # If you changed the default kubelet home path, this
  # value needs to be modified accordingly
  kubeletPath: /var/lib/kubelet
  controller:
    tolerations: [ ]
    nodeSelector:
      "component.cubefs.io/csi": "enabled"
  node:
    tolerations: [ ]
    nodeSelector:
      "component.cubefs.io/csi": "enabled"
    resources:
      enabled: false
      requests:
        memory: "4048Mi"
        cpu: "2000m"
      limits:
        memory: "4048Mi"
        cpu: "2000m"
  storageClass:
    # Whether automatically set this StorageClass to default volume provisioner
    setToDefault: true
    # StorageClass reclaim policy, 'Delete' or 'Retain' is supported
    reclaimPolicy: "Delete"
    # Override the master address parameter to connect to external cluster
    masterAddr: ""
    otherParameters:
    # Other parameters that will pass through to StorageClass, and then
    # will pass through to the generated cfs-client configuration file.
    # crossZone: "false"
    # enableToken: "false"
    # zoneName: ""
    # icacheTimeout: ""
    # lookupValid: ""
    # attrValid: ""
    # readRate: ""
    # writeRate: ""
    # enSyncWrite: ""
    # autoInvalData: ""
    # rdonly: "false"
    # writecache: "false"
    # keepcache: "false"
    # followerRead: "false"
    # authenticate: "false"
    # clientKey: ""
    # ticketHost: ""
    # enableHTTPS: "false"
    # token: ""
    # accessKey: ""
    # secretKey: ""
    # disableDcache: "false"
    # subdir: ""
    # fsyncOnClose: "true"
    # maxcpus: ""
    # enableXattr: "false"
    # alignSize: "4096"
    # maxExtentNumPerAlignArea: "12"
    # forceAlignMerge: "true"

consul:
  port: 8500
  replicas: 1
  external_address: ""

grafana:
  port: 3000
  replicas: 1
  # Ingress host name
  host: monitor.cubefs.com
  admin_password: !!string 123456
  resources:
    enabled: false
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1024Mi"
      cpu: "1000m"

prometheus:
  port: 9090
  replicas: 1
  resources:
    enabled: false
    requests:
      memory: "512Mi"
      cpu: "500m"
    limits:
      memory: "1024Mi"
      cpu: "1000m"
